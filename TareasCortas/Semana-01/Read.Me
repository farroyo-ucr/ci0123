  [Ejercicio propuesto: 2020/Mar/10; entrega 2020/Abr/17]

  Objetivos
      Entender el funcionamiento de los "Makefile"
      Creación de procesos en Unix (Linux) [fork]
      Completar la implantación de la clase para semáforos
      Correr el programa "PiPorSeries.c" e indicar por qué no funciona

  Funcionamiento
     Para lograr la sincronización de procesos por medio de semáforos, queremos
  que uno de los procesos espera hasta que otro proceso le indique que puede
  continuar.  Es por ello que esta clase, tiene facilidad para realizar ambas
  tareas, una para bloquear los procesos "Wait" y otra para avisar que pueden
  continuar "Signal".

    -----------                     -----------
   |           |                   |           |
   | Proceso P |                   | Proceso Q |
   |           |                   |           |
    -----------\                   / -----------
                \                 /
                 \ --------------/
                  | Sem.  A12345 |
                  |              |
                  | Sist. Oper.  |
                  |   (LINUX)    |
                   --------------

   El semáforo tiene que ser creado por alguno de los procesos, para eso vamos a
   tener el constructor de la clase.


Procedimiento

   a) Entender el funcionamiento de los "Makefile"

   b) Creación de procesos en Unix (Linux) [fork]
      Correr el ejemplo provisto "PiPorSeries.c"
         Crear un documento de texto y anotar los resultados obtenidos

   c) Semáforos: construir la implantación de la clase
   
      Completar la clase Semaforo para poder sincronizar procesos de una misma 
      computadora.  Se facilita la interfaz Semafofo.h.

     - Llamados al sistema a utilizar
         Constructor: semget, semctl

         Destructor: semctl
         Signal: semop
         Wait: semop

      - Lograr que el ejemplo: pruebaSem funcione correctamente

